{"version":3,"file":"softarc-native-federation-runtime.mjs","sources":["../../../../libs/native-federation-runtime/src/lib/model/import-map.ts","../../../../libs/native-federation-runtime/src/lib/model/global-cache.ts","../../../../libs/native-federation-runtime/src/lib/model/externals.ts","../../../../libs/native-federation-runtime/src/lib/utils/path-utils.ts","../../../../libs/native-federation-runtime/src/lib/model/remotes.ts","../../../../libs/native-federation-runtime/src/lib/utils/add-import-map.ts","../../../../libs/native-federation-runtime/src/lib/init-federation.ts","../../../../libs/native-federation-runtime/src/lib/load-remote-module.ts","../../../../libs/native-federation-runtime/src/softarc-native-federation-runtime.ts"],"sourcesContent":["export type Imports = Record<string, string>;\n\nexport type Scopes = Record<string, Imports>;\n\nexport type ImportMap = {\n  imports: Imports;\n  scopes: Scopes;\n};\n\nexport function mergeImportMaps(map1: ImportMap, map2: ImportMap): ImportMap {\n  return {\n    imports: { ...map1.imports, ...map2.imports },\n    scopes: { ...map1.scopes, ...map2.scopes },\n  };\n}\n","import { Remote } from './remotes';\r\n\r\nexport const nfNamespace = '__NATIVE_FEDERATION__';\r\n\r\nexport type NfCache = {\r\n  externals: Map<string, string>;\r\n  remoteNamesToRemote: Map<string, Remote>;\r\n  baseUrlToRemoteNames: Map<string, string>;\r\n};\r\n\r\nexport type Global = {\r\n  [nfNamespace]: NfCache;\r\n};\r\n\r\nconst global = globalThis as unknown as Global;\r\n\r\nglobal[nfNamespace] ??= {\r\n  externals: new Map<string, string>(),\r\n  remoteNamesToRemote: new Map<string, Remote>(),\r\n  baseUrlToRemoteNames: new Map<string, string>(),\r\n};\r\n\r\nexport const globalCache = global[nfNamespace];\r\n","import { SharedInfo } from './federation-info';\r\nimport { globalCache } from './global-cache';\r\n\r\nconst externals = globalCache.externals;\r\n\r\nfunction getExternalKey(shared: SharedInfo) {\r\n  return `${shared.packageName}@${shared.version}`;\r\n}\r\n\r\nexport function getExternalUrl(shared: SharedInfo): string | undefined {\r\n  const packageKey = getExternalKey(shared);\r\n  return externals.get(packageKey);\r\n}\r\n\r\nexport function setExternalUrl(shared: SharedInfo, url: string): void {\r\n  const packageKey = getExternalKey(shared);\r\n  externals.set(packageKey, url);\r\n}\r\n","export function getDirectory(url: string) {\n  const parts = url.split('/');\n  parts.pop();\n  return parts.join('/');\n}\n\nexport function joinPaths(path1: string, path2: string): string {\n  while (path1.endsWith('/')) {\n    path1 = path1.substring(0, path1.length - 1);\n  }\n  if (path2.startsWith('./')) {\n    path2 = path2.substring(2, path2.length);\n  }\n\n  return `${path1}/${path2}`;\n}\n","import { FederationInfo } from './federation-info';\r\nimport { globalCache } from './global-cache';\r\n\r\nexport type Remote = FederationInfo & {\r\n  baseUrl: string;\r\n};\r\n\r\nconst remoteNamesToRemote = globalCache.remoteNamesToRemote;\r\nconst baseUrlToRemoteNames = globalCache.baseUrlToRemoteNames;\r\n\r\nexport function addRemote(remoteName: string, remote: Remote): void {\r\n  remoteNamesToRemote.set(remoteName, remote);\r\n  baseUrlToRemoteNames.set(remote.baseUrl, remoteName);\r\n}\r\n\r\nexport function getRemoteNameByBaseUrl(baseUrl: string): string | undefined {\r\n  return baseUrlToRemoteNames.get(baseUrl);\r\n}\r\n\r\nexport function isRemoteInitialized(baseUrl: string): boolean {\r\n  return baseUrlToRemoteNames.has(baseUrl);\r\n}\r\n\r\nexport function getRemote(remoteName: string): Remote | undefined {\r\n  return remoteNamesToRemote.get(remoteName);\r\n}\r\n\r\nexport function hasRemote(remoteName: string): boolean {\r\n  return remoteNamesToRemote.has(remoteName);\r\n}\r\n","import { ImportMap } from '../model/import-map';\r\n\r\nexport function appendImportMap(importMap: ImportMap) {\r\n  document.head.appendChild(\r\n    Object.assign(document.createElement('script'), {\r\n      type: 'importmap-shim',\r\n      innerHTML: JSON.stringify(importMap),\r\n    })\r\n  );\r\n}\r\n","import {\r\n  Scopes,\r\n  Imports,\r\n  ImportMap,\r\n  mergeImportMaps,\r\n} from './model/import-map';\r\nimport { getExternalUrl, setExternalUrl } from './model/externals';\r\nimport { joinPaths, getDirectory } from './utils/path-utils';\r\nimport { addRemote } from './model/remotes';\r\nimport { appendImportMap } from './utils/add-import-map';\r\nimport { FederationInfo } from './model/federation-info';\r\n\r\nexport async function initFederation(\r\n  remotesOrManifestUrl: Record<string, string> | string = {}\r\n): Promise<ImportMap> {\r\n  const remotes =\r\n    typeof remotesOrManifestUrl === 'string'\r\n      ? await loadManifest(remotesOrManifestUrl)\r\n      : remotesOrManifestUrl;\r\n\r\n  const hostImportMap = await processHostInfo();\r\n  const remotesImportMap = await processRemoteInfos(remotes);\r\n\r\n  const importMap = mergeImportMaps(hostImportMap, remotesImportMap);\r\n  appendImportMap(importMap);\r\n\r\n  return importMap;\r\n}\r\n\r\nasync function loadManifest(remotes: string): Promise<Record<string, string>> {\r\n  return (await fetch(remotes).then((r) => r.json())) as Record<string, string>;\r\n}\r\n\r\nasync function processRemoteInfos(\r\n  remotes: Record<string, string>\r\n): Promise<ImportMap> {\r\n  const processRemoteInfoPromises = Object.keys(remotes).map(\r\n    async (remoteName) => {\r\n      try {\r\n        const url = remotes[remoteName];\r\n        return await processRemoteInfo(url, remoteName);\r\n      } catch (e) {\r\n        console.error(\r\n          `Error loading remote entry for ${remoteName} from file ${remotes[remoteName]}`\r\n        );\r\n        return null;\r\n      }\r\n    }\r\n  );\r\n\r\n  const remoteImportMaps = await Promise.all(processRemoteInfoPromises);\r\n\r\n  const importMap = remoteImportMaps.reduce<ImportMap>(\r\n    (acc, remoteImportMap) =>\r\n      remoteImportMap ? mergeImportMaps(acc, remoteImportMap) : acc,\r\n    { imports: {}, scopes: {} }\r\n  );\r\n\r\n  return importMap;\r\n}\r\n\r\nexport async function processRemoteInfo(\r\n  federationInfoUrl: string,\r\n  remoteName?: string\r\n): Promise<ImportMap> {\r\n  const baseUrl = getDirectory(federationInfoUrl);\r\n  const remoteInfo = await loadFederationInfo(federationInfoUrl);\r\n\r\n  if (!remoteName) {\r\n    remoteName = remoteInfo.name;\r\n  }\r\n\r\n  const importMap = createRemoteImportMap(remoteInfo, remoteName, baseUrl);\r\n  addRemote(remoteName, { ...remoteInfo, baseUrl });\r\n\r\n  return importMap;\r\n}\r\n\r\nfunction createRemoteImportMap(\r\n  remoteInfo: FederationInfo,\r\n  remoteName: string,\r\n  baseUrl: string\r\n): ImportMap {\r\n  const imports = processExposed(remoteInfo, remoteName, baseUrl);\r\n  const scopes = processRemoteImports(remoteInfo, baseUrl);\r\n  return { imports, scopes };\r\n}\r\n\r\nasync function loadFederationInfo(url: string): Promise<FederationInfo> {\r\n  const info = (await fetch(url).then((r) => r.json())) as FederationInfo;\r\n  return info;\r\n}\r\n\r\nfunction processRemoteImports(\r\n  remoteInfo: FederationInfo,\r\n  baseUrl: string\r\n): Scopes {\r\n  const scopes: Scopes = {};\r\n  const scopedImports: Imports = {};\r\n\r\n  for (const shared of remoteInfo.shared) {\r\n    const outFileName =\r\n      getExternalUrl(shared) ?? joinPaths(baseUrl, shared.outFileName);\r\n    setExternalUrl(shared, outFileName);\r\n    scopedImports[shared.packageName] = outFileName;\r\n  }\r\n\r\n  scopes[baseUrl + '/'] = scopedImports;\r\n  return scopes;\r\n}\r\n\r\nfunction processExposed(\r\n  remoteInfo: FederationInfo,\r\n  remoteName: string,\r\n  baseUrl: string\r\n): Imports {\r\n  const imports: Imports = {};\r\n\r\n  for (const exposed of remoteInfo.exposes) {\r\n    const key = joinPaths(remoteName, exposed.key);\r\n    const value = joinPaths(baseUrl, exposed.outFileName);\r\n    imports[key] = value;\r\n  }\r\n\r\n  return imports;\r\n}\r\n\r\nasync function processHostInfo(): Promise<ImportMap> {\r\n  const hostInfo = await loadFederationInfo('./remoteEntry.json');\r\n\r\n  const imports = hostInfo.shared.reduce(\r\n    (acc, cur) => ({ ...acc, [cur.packageName]: './' + cur.outFileName }),\r\n    {}\r\n  ) as Imports;\r\n\r\n  for (const shared of hostInfo.shared) {\r\n    setExternalUrl(shared, './' + shared.outFileName);\r\n  }\r\n  return { imports, scopes: {} };\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { appendImportMap } from './utils/add-import-map';\nimport { processRemoteInfo } from './init-federation';\nimport {\n  getRemote,\n  getRemoteNameByBaseUrl,\n  isRemoteInitialized,\n} from './model/remotes';\nimport { getDirectory, joinPaths } from './utils/path-utils';\n\ndeclare function importShim<T>(url: string): T;\n\nexport type LoadRemoteModuleOptions = {\n  remoteEntry?: string;\n  remoteName?: string;\n  exposedModule: string;\n};\n\nexport async function loadRemoteModule<T = any>(\n  options: LoadRemoteModuleOptions\n): Promise<T>;\nexport async function loadRemoteModule<T = any>(\n  remoteName: string,\n  exposedModule: string\n): Promise<T>;\nexport async function loadRemoteModule<T = any>(\n  optionsOrRemoteName: LoadRemoteModuleOptions | string,\n  exposedModule?: string\n): Promise<T> {\n  const options = normalizeOptions(optionsOrRemoteName, exposedModule);\n\n  await ensureRemoteInitialized(options);\n\n  const remoteName = getRemoteNameByOptions(options);\n  const remote = getRemote(remoteName);\n\n  if (!remote) {\n    throw new Error('unknown remote ' + remoteName);\n  }\n\n  const exposed = remote.exposes.find((e) => e.key === options.exposedModule);\n\n  if (!exposed) {\n    throw new Error(\n      `Unknown exposed module ${options.exposedModule} in remote ${remoteName}`\n    );\n  }\n\n  const url = joinPaths(remote.baseUrl, exposed.outFileName);\n  const module = await importShim<T>(url);\n\n  return module;\n}\n\nfunction getRemoteNameByOptions(options: LoadRemoteModuleOptions) {\n  let remoteName;\n\n  if (options.remoteName) {\n    remoteName = options.remoteName;\n  } else if (options.remoteEntry) {\n    const baseUrl = getDirectory(options.remoteEntry);\n    remoteName = getRemoteNameByBaseUrl(baseUrl);\n  } else {\n    throw new Error(\n      'unexpcted arguments: Please pass remoteName or remoteEntry'\n    );\n  }\n\n  if (!remoteName) {\n    throw new Error('unknown remoteName ' + remoteName);\n  }\n  return remoteName;\n}\n\nasync function ensureRemoteInitialized(\n  options: LoadRemoteModuleOptions\n): Promise<void> {\n  if (\n    options.remoteEntry &&\n    !isRemoteInitialized(getDirectory(options.remoteEntry))\n  ) {\n    const importMap = await processRemoteInfo(options.remoteEntry);\n    appendImportMap(importMap);\n  }\n}\n\nfunction normalizeOptions(\n  optionsOrRemoteName: string | LoadRemoteModuleOptions,\n  exposedModule: string | undefined\n): LoadRemoteModuleOptions {\n  let options: LoadRemoteModuleOptions;\n\n  if (typeof optionsOrRemoteName === 'string' && exposedModule) {\n    options = {\n      remoteName: optionsOrRemoteName,\n      exposedModule,\n    };\n  } else if (typeof optionsOrRemoteName === 'object' && !exposedModule) {\n    options = optionsOrRemoteName;\n  } else {\n    throw new Error(\n      'unexpected arguments: please pass options or a remoteName/exposedModule-pair'\n    );\n  }\n  return options;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}